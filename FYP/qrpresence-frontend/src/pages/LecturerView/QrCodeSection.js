import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useState, useEffect, useMemo } from "react";
import { Trash2, Loader2, AlertCircle, Download, RefreshCw } from "lucide-react";
export const QrCodeSection = ({ qrCodes, latestQrCode, onDownload, onDelete, onRefresh }) => {
    const [deleteId, setDeleteId] = useState(null);
    const [imageStatus, setImageStatus] = useState({});
    const [latestQrStatus, setLatestQrStatus] = useState('loading');
    // Memoize expired checks to prevent unnecessary recalculations
    const expiredStatus = useMemo(() => {
        return qrCodes.reduce((acc, qr) => {
            acc[qr.id] = qr.expires_at ? new Date(qr.expires_at) < new Date() : false;
            return acc;
        }, {});
    }, [qrCodes]);
    // Initialize image statuses
    useEffect(() => {
        const initialStatus = {};
        qrCodes.forEach(qr => {
            initialStatus[qr.id] = 'loading';
        });
        setImageStatus(initialStatus);
    }, [qrCodes]);
    // Reset latest QR code status when it changes
    useEffect(() => {
        if (latestQrCode) {
            setLatestQrStatus('loading');
        }
    }, [latestQrCode]);
    return (_jsx("div", { className: "min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 p-6", children: _jsxs("div", { className: "max-w-7xl mx-auto space-y-10", children: [latestQrCode && (_jsx("div", { className: "bg-white/80 backdrop-blur-sm rounded-3xl shadow-xl border border-purple-100 p-8", children: _jsxs("div", { className: "text-center space-y-6", children: [_jsxs("div", { className: "flex justify-between items-center", children: [_jsxs("div", { className: "flex items-center gap-3", children: [_jsx("div", { className: "w-3 h-3 rounded-full bg-green-500 animate-pulse" }), _jsx("h2", { className: "text-3xl font-bold bg-gradient-to-r from-purple-600 via-blue-600 to-purple-700 bg-clip-text text-transparent", children: "Latest Attendance QR Code" })] }), onRefresh && (_jsxs("button", { onClick: onRefresh, className: "group bg-blue-50 hover:bg-blue-100 text-blue-700 px-4 py-2 rounded-full flex items-center gap-2 transition-all duration-300 border border-blue-200 hover:border-blue-300", children: [_jsx(RefreshCw, { size: 16, className: "group-hover:rotate-180 transition-transform duration-500" }), "Refresh List"] }))] }), _jsxs("div", { className: "relative mx-auto w-80 h-80 bg-gradient-to-br from-green-50 to-blue-50 border-4 border-green-400 rounded-3xl shadow-2xl flex items-center justify-center overflow-hidden", children: [_jsx("div", { className: "absolute inset-0 bg-gradient-to-br from-green-100/50 to-blue-100/50 rounded-3xl" }), latestQrStatus === 'loading' && (_jsx("div", { className: "absolute inset-0 flex items-center justify-center z-10", children: _jsxs("div", { className: "flex flex-col items-center gap-3", children: [_jsx(Loader2, { className: "animate-spin text-purple-600", size: 32 }), _jsx("span", { className: "text-sm text-grey-600", children: "Loading QR Code..." })] }) })), latestQrStatus === 'error' ? (_jsxs("div", { className: "flex flex-col items-center justify-center p-6 text-red-500 z-10", children: [_jsx("div", { className: "bg-red-50 rounded-full p-4 mb-4", children: _jsx(AlertCircle, { size: 40, className: "text-red-500" }) }), _jsx("span", { className: "text-lg font-medium mb-3", children: "Failed to load QR code" }), _jsx("button", { onClick: () => setLatestQrStatus('loading'), className: "bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-full text-sm transition-colors", children: "Try Again" })] })) : (_jsx("img", { src: latestQrCode.url, alt: `QR Code for ${latestQrCode.session}`, className: `w-full h-full object-contain z-10 rounded-2xl ${latestQrStatus !== 'loaded' ? 'invisible' : ''}`, onLoad: () => setLatestQrStatus('loaded'), onError: () => {
                                            console.error('Failed to load latest QR code:', latestQrCode.url);
                                            setLatestQrStatus('error');
                                        }, crossOrigin: "anonymous", loading: "eager" }))] }), _jsx("div", { className: "flex justify-center", children: _jsxs("button", { onClick: () => onDownload(latestQrCode.id), disabled: latestQrStatus !== 'loaded', className: `group bg-gradient-to-r from-green-600 to-green-700 hover:from-green-700 hover:to-green-800 text-white px-8 py-4 rounded-full font-semibold text-lg transition-all duration-300 flex items-center gap-3 shadow-lg hover:shadow-xl transform hover:-translate-y-1 ${latestQrStatus !== 'loaded' ? 'opacity-50 cursor-not-allowed hover:transform-none' : ''}`, children: [_jsx(Download, { size: 22, className: "group-hover:animate-bounce" }), "Download QR Code"] }) }), _jsx("div", { className: "bg-gradient-to-r from-purple-50 to-blue-50 rounded-2xl p-6 border border-purple-200", children: _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-4 text-sm", children: [_jsxs("div", { className: "flex flex-col items-center gap-1", children: [_jsx("span", { className: "text-grey-500 font-medium", children: "Session" }), _jsx("span", { className: "text-purple-700 font-semibold text-lg", children: latestQrCode.session })] }), _jsxs("div", { className: "flex flex-col items-center gap-1", children: [_jsx("span", { className: "text-grey-500 font-medium", children: "Created" }), _jsx("span", { className: "text-blue-700 font-semibold", children: latestQrCode.created_at })] }), latestQrCode.expires_at && (_jsxs("div", { className: "flex flex-col items-center gap-1", children: [_jsx("span", { className: "text-grey-500 font-medium", children: expiredStatus[latestQrCode.id] ? "Status" : "Expires" }), _jsx("span", { className: `font-semibold flex items-center gap-2 ${expiredStatus[latestQrCode.id] ? "text-red-600" : "text-green-600"}`, children: expiredStatus[latestQrCode.id] ? (_jsxs(_Fragment, { children: [_jsx("span", { className: "w-2 h-2 bg-red-500 rounded-full" }), "Expired"] })) : (_jsxs(_Fragment, { children: [_jsx("span", { className: "w-2 h-2 bg-green-500 rounded-full animate-pulse" }), latestQrCode.expires_at] })) })] }))] }) })] }) })), _jsxs("div", { className: "bg-white/80 backdrop-blur-sm rounded-3xl shadow-xl border border-purple-100 p-8", children: [_jsxs("div", { className: "flex items-center justify-center gap-4 mb-8", children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx("div", { className: "w-8 h-8 bg-gradient-to-br from-purple-500 to-blue-600 rounded-lg flex items-center justify-center", children: _jsx("span", { className: "text-white text-xl", children: "\uD83D\uDCDA" }) }), _jsx("h3", { className: "text-2xl font-bold bg-gradient-to-r from-purple-600 to-blue-600 bg-clip-text text-transparent", children: "All QR Codes" })] }), _jsx("div", { className: "bg-gradient-to-r from-purple-100 to-blue-100 px-4 py-2 rounded-full", children: _jsxs("span", { className: "text-purple-700 font-semibold", children: [qrCodes.length, " codes"] }) })] }), qrCodes.length === 0 ? (_jsx("div", { className: "text-center py-16", children: _jsxs("div", { className: "bg-gradient-to-br from-grey-100 to-blue-50 rounded-3xl p-12 max-w-md mx-auto", children: [_jsx("div", { className: "text-6xl mb-4", children: "\uD83C\uDFAF" }), _jsx("h3", { className: "text-xl font-semibold text-grey-600 mb-2", children: "No QR codes yet" }), _jsx("p", { className: "text-grey-500", children: "Generate your first QR code to get started!" })] }) })) : (_jsx("div", { className: "grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-6", children: qrCodes.map((qr) => {
                                const expired = expiredStatus[qr.id];
                                const status = imageStatus[qr.id] || 'loading';
                                return (_jsx("div", { className: `group bg-white rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-2 overflow-hidden border-2 ${expired
                                        ? "border-red-200 bg-red-50/50"
                                        : "border-purple-100 hover:border-purple-300"}`, children: _jsxs("div", { className: "p-4 space-y-4", children: [_jsxs("div", { className: `relative w-full aspect-square rounded-xl overflow-hidden ${expired ? "bg-red-50" : "bg-gradient-to-br from-grey-50 to-blue-50"} border-2 ${expired ? "border-red-200" : "border-purple-200"} flex items-center justify-center`, children: [status === 'loading' && (_jsx("div", { className: "absolute inset-0 flex items-center justify-center z-10", children: _jsxs("div", { className: "flex flex-col items-center gap-2", children: [_jsx(Loader2, { className: "animate-spin text-purple-500", size: 20 }), _jsx("span", { className: "text-xs text-grey-500", children: "Loading..." })] }) })), status === 'error' ? (_jsxs("div", { className: "flex flex-col items-center justify-center p-3 text-red-500 z-10", children: [_jsx("div", { className: "bg-red-100 rounded-full p-2 mb-2", children: _jsx(AlertCircle, { size: 20 }) }), _jsx("span", { className: "text-xs font-medium mb-2", children: "Load failed" }), _jsx("button", { onClick: () => setImageStatus(prev => ({ ...prev, [qr.id]: 'loading' })), className: "bg-blue-500 hover:bg-blue-600 text-white px-2 py-1 rounded-full text-xs transition-colors", children: "Retry" })] })) : (_jsx("img", { src: qr.url, alt: `QR Code for ${qr.session}`, className: `w-full h-full object-contain rounded-lg ${status !== 'loaded' ? 'invisible' : ''} ${expired ? "opacity-60 grayscale" : ""}`, onLoad: () => setImageStatus(prev => ({ ...prev, [qr.id]: 'loaded' })), onError: () => {
                                                            console.error('Failed to load QR code:', qr.url);
                                                            setImageStatus(prev => ({ ...prev, [qr.id]: 'error' }));
                                                        }, crossOrigin: "anonymous", loading: "lazy" })), expired && (_jsx("div", { className: "absolute top-2 right-2 bg-red-500 text-white px-2 py-1 rounded-full text-xs font-medium", children: "Expired" }))] }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "text-center", children: [_jsx("p", { className: "font-semibold text-purple-700 truncate text-sm", title: qr.session, children: qr.session }), _jsxs("div", { className: "flex flex-col gap-1 mt-2", children: [_jsxs("p", { className: "text-xs text-grey-600 flex items-center justify-center gap-1", children: [_jsx("span", { className: "w-1 h-1 bg-blue-400 rounded-full" }), "Created: ", qr.created_at] }), qr.expires_at && (_jsxs("p", { className: `text-xs flex items-center justify-center gap-1 ${expired ? "text-red-600 font-medium" : "text-green-600"}`, children: [_jsx("span", { className: `w-1 h-1 rounded-full ${expired ? "bg-red-500" : "bg-green-500"}` }), expired ? "Expired" : "Expires", ": ", qr.expires_at] }))] })] }), _jsxs("div", { className: "flex justify-center gap-3", children: [_jsxs("button", { onClick: () => onDownload(qr.id), disabled: status !== 'loaded', className: `group bg-blue-50 hover:bg-blue-100 text-blue-700 px-3 py-2 rounded-full flex items-center gap-1 text-sm font-medium transition-all duration-200 border border-blue-200 hover:border-blue-300 ${status !== 'loaded' ? 'opacity-50 cursor-not-allowed' : 'hover:shadow-md'}`, children: [_jsx(Download, { size: 14, className: "group-hover:animate-bounce" }), "Download"] }), _jsxs("button", { onClick: () => setDeleteId(qr.id), className: "group bg-red-50 hover:bg-red-100 text-red-700 px-3 py-2 rounded-full flex items-center gap-1 text-sm font-medium transition-all duration-200 border border-red-200 hover:border-red-300 hover:shadow-md", children: [_jsx(Trash2, { size: 14, className: "group-hover:animate-pulse" }), "Delete"] })] })] })] }) }, qr.id));
                            }) }))] }), deleteId !== null && (_jsx("div", { className: "fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50 p-4 animate-in fade-in duration-300", children: _jsxs("div", { className: "bg-white rounded-3xl shadow-2xl p-8 w-full max-w-md space-y-6 animate-in zoom-in duration-300 border border-purple-200", children: [_jsxs("div", { className: "text-center", children: [_jsx("div", { className: "bg-red-100 rounded-full w-16 h-16 flex items-center justify-center mx-auto mb-4", children: _jsx(Trash2, { size: 32, className: "text-red-600" }) }), _jsx("h2", { className: "text-2xl font-bold text-grey-800 mb-2", children: "Confirm Deletion" }), _jsx("p", { className: "text-grey-600 leading-relaxed", children: "Are you sure you want to delete this QR code? This action cannot be undone and will permanently remove the code from your collection." })] }), _jsxs("div", { className: "flex gap-3", children: [_jsx("button", { onClick: () => setDeleteId(null), className: "flex-1 px-6 py-3 rounded-2xl border-2 border-grey-300 text-grey-700 hover:bg-grey-50 transition-all duration-200 font-medium hover:border-grey-400", children: "Cancel" }), _jsxs("button", { onClick: () => {
                                            onDelete(deleteId);
                                            setDeleteId(null);
                                        }, className: "flex-1 px-6 py-3 rounded-2xl bg-gradient-to-r from-red-600 to-red-700 text-white hover:from-red-700 hover:to-red-800 transition-all duration-200 flex items-center justify-center gap-2 font-medium shadow-lg hover:shadow-xl", children: [_jsx(Trash2, { size: 18 }), "Delete"] })] })] }) }))] }) }));
};
