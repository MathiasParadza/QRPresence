from django.contrib import admin
from .models import Attendance, QRCode, Session, Lecturer, Student

class QRCodeAdmin(admin.ModelAdmin):
    list_display = ('session', 'created_at', 'expires_at', 'qr_image')  # Display expires_at
    list_filter = ('session', 'expires_at')  # Add filter by expiration date
    search_fields = ('session__class_name',)  # Allows searching by session class name
    
    # Removed 'created_at' from fields as it's auto-generated by Django
    fields = ('session', 'qr_image', 'expires_at')  # Exclude 'created_at'

admin.site.register(QRCode, QRCodeAdmin)

@admin.register(Lecturer)
class LecturerAdmin(admin.ModelAdmin):
    list_display = ('lecturer_id', 'name', 'email', 'department')

@admin.register(Student)
class StudentAdmin(admin.ModelAdmin):
    list_display = ('student_id', 'name', 'email', 'course')

@admin.register(Attendance)
class AttendanceAdmin(admin.ModelAdmin):
    list_display = ('student', 'session', 'status', 'check_in_time', 'check_out_time')  # Use 'student' instead of 'student_id'
    ordering = ('check_in_time',)
    list_filter = ('status', 'check_in_time', 'session')  # added session filter
    search_fields = ('student__user__username', 'session__class_name')  # fixed searching fields
    date_hierarchy = 'check_in_time'

    actions = ['export_as_csv']  # optional: CSV export

    def export_as_csv(self, request, queryset):
        import csv
        from django.http import HttpResponse

        response = HttpResponse(content_type='text/csv')
        response['Content-Disposition'] = 'attachment; filename=attendance_report.csv'
        writer = csv.writer(response)
        writer.writerow(['Student ID', 'Session', 'Status', 'Check-in', 'Check-out'])
        for obj in queryset:
            writer.writerow([
                obj.student.student_id, obj.session.class_name, obj.status,  # Reference 'student_id' via 'student'
                obj.check_in_time, obj.check_out_time
            ])
        return response

    export_as_csv.short_description = "Export Selected as CSV"
